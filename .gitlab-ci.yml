stages:
  - build
  - test
  - deploy

variables:
  DOCKER_IMAGE_BACKEND: ahmed1091/backend
  DOCKER_IMAGE_FRONTEND: ahmed1091/frontend

# Step 1: Build Backend Docker Image
build_backend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker build -t $DOCKER_IMAGE_BACKEND:latest backend/
    - docker push $DOCKER_IMAGE_BACKEND:latest
  only:
    - master

# Step 2: Build Frontend Docker Image
build_frontend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker build -t $DOCKER_IMAGE_FRONTEND:latest frontend/
    - docker push $DOCKER_IMAGE_FRONTEND:latest
  only:
    - master

# Step 3: Run Unit Tests
run_tests:
  stage: test
  image: node:18
  script:
    - cd backend && npm install && npm test
  only:
    - master

# Step 4: Deploy - Simulate Local Deployment
deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "Deploying application locally..."
    # Pull the latest images (Optional if you want to deploy on other systems)
    - docker pull $DOCKER_IMAGE_BACKEND:latest
    - docker pull $DOCKER_IMAGE_FRONTEND:latest
    # Run the containers (this will simulate local deployment)
    - docker run -d --name backend -p 5001:5001 $DOCKER_IMAGE_BACKEND:latest
    - docker run -d --name frontend -p 5173:5173 $DOCKER_IMAGE_FRONTEND:latest
  only:
    - master
